{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\ERICK\\\\Downloads\\\\snakes_and_ladders_3.0\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport boardImage from './assets/Board.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState(null);\n  const [diceRoll, setDiceRoll] = useState(null);\n  const fetchGameState = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/game-state');\n      const data = await response.json();\n      setGameState(data);\n    } catch (error) {\n      console.log('Backend not ready');\n    }\n  };\n  const startGame = async () => {\n    await fetch('http://localhost:5000/start-game', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        players: ['Player 1', 'Player 2']\n      })\n    });\n    fetchGameState();\n  };\n  const rollDice = async () => {\n    const response = await fetch('http://localhost:5000/roll-dice', {\n      method: 'POST'\n    });\n    const data = await response.json();\n    setDiceRoll(data.dice);\n    fetchGameState();\n  };\n  useEffect(() => {\n    fetchGameState();\n  }, []);\n  const getPositionStyle = cellNumber => {\n    const row = Math.floor((cellNumber - 1) / 10);\n    const col = (cellNumber - 1) % 10;\n    const displayRow = 10 - 1 - row;\n    const displayCol = row % 2 === 0 ? col : 10 - 1 - col;\n    return {\n      position: 'absolute',\n      left: `${displayCol * 10 + 5}%`,\n      top: `${displayRow * 10 + 5}%`,\n      transform: 'translate(-50%, -50%)'\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Snakes and Ladders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: rollDice,\n      children: \"Roll Dice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), diceRoll && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Rolled: \", diceRoll]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 20\n    }, this), gameState && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: boardImage,\n        alt: \"Snakes and Ladders Board\",\n        className: \"board-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), Object.entries(gameState.positions).map(([player, position], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-token\",\n        style: {\n          ...getPositionStyle(position || 1),\n          backgroundColor: index === 0 ? '#FF6B6B' : '#4ECDC4'\n        },\n        title: `${player} - Position: ${position}`\n      }, player, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), gameState && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Player: \", gameState.currentPlayer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Positions: \", JSON.stringify(gameState.positions)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GN0lpyJgGF9TwvtGudQo9m97HfM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","boardImage","jsxDEV","_jsxDEV","App","_s","gameState","setGameState","diceRoll","setDiceRoll","fetchGameState","response","fetch","data","json","error","console","log","startGame","method","headers","body","JSON","stringify","players","rollDice","dice","getPositionStyle","cellNumber","row","Math","floor","col","displayRow","displayCol","position","left","top","transform","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","Object","entries","positions","map","player","index","style","backgroundColor","title","currentPlayer","_c","$RefreshReg$"],"sources":["c:/Users/ERICK/Downloads/snakes_and_ladders_3.0/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport boardImage from './assets/Board.jpeg';\n\nfunction App() {\n  const [gameState, setGameState] = useState(null);\n  const [diceRoll, setDiceRoll] = useState(null);\n\n  const fetchGameState = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/game-state');\n      const data = await response.json();\n      setGameState(data);\n    } catch (error) {\n      console.log('Backend not ready');\n    }\n  };\n\n  const startGame = async () => {\n    await fetch('http://localhost:5000/start-game', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ players: ['Player 1', 'Player 2'] })\n    });\n    fetchGameState();\n  };\n\n  const rollDice = async () => {\n    const response = await fetch('http://localhost:5000/roll-dice', { method: 'POST' });\n    const data = await response.json();\n    setDiceRoll(data.dice);\n    fetchGameState();\n  };\n\n  useEffect(() => {\n    fetchGameState();\n  }, []);\n\n  const getPositionStyle = (cellNumber) => {\n    const row = Math.floor((cellNumber - 1) / 10);\n    const col = (cellNumber - 1) % 10;\n    const displayRow = 10 - 1 - row;\n    const displayCol = row % 2 === 0 ? col : 10 - 1 - col;\n    \n    return {\n      position: 'absolute',\n      left: `${(displayCol * 10) + 5}%`,\n      top: `${(displayRow * 10) + 5}%`,\n      transform: 'translate(-50%, -50%)'\n    };\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Snakes and Ladders</h1>\n      <button onClick={startGame}>Start Game</button>\n      <button onClick={rollDice}>Roll Dice</button>\n      {diceRoll && <div>Rolled: {diceRoll}</div>}\n      \n      {gameState && (\n        <div className=\"game-board\">\n          <img src={boardImage} alt=\"Snakes and Ladders Board\" className=\"board-image\" />\n          {Object.entries(gameState.positions).map(([player, position], index) => (\n            <div \n              key={player}\n              className=\"player-token\"\n              style={{\n                ...getPositionStyle(position || 1),\n                backgroundColor: index === 0 ? '#FF6B6B' : '#4ECDC4'\n              }}\n              title={`${player} - Position: ${position}`}\n            ></div>\n          ))}\n        </div>\n      )}\n      \n      {gameState && (\n        <div>\n          <p>Current Player: {gameState.currentPlayer}</p>\n          <p>Positions: {JSON.stringify(gameState.positions)}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}